{"version":3,"file":"static/js/827.7f586e0e.chunk.js","mappings":"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","sources":["redux/filter/selectors.js","components/Contact/Contact.jsx","redux/contacts/selectors.js","components/ContactList/ContactList.jsx","utils/sortArrOfObj.js","utils/formatPhoneNumber.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","pages/PhoneBook.jsx"],"sourcesContent":["export const getFilter = state => state.filter;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Flex, Avatar, Box, Text, Button, Divider } from '@chakra-ui/react';\nimport { DeleteIcon } from '@chakra-ui/icons';\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <>\n      <Flex align=\"center\" p={2}>\n        <Avatar src=\"https://bit.ly/broken-link\" />\n        <Box ml=\"3\">\n          <Text fontWeight=\"bold\">{name}</Text>\n          <Text fontSize=\"sm\">{number}</Text>\n        </Box>\n        <Button type=\"button\" onClick={handleDelete} variant=\"brand\" ml=\"auto\">\n          <DeleteIcon />\n        </Button>\n      </Flex>\n      <Divider />\n    </>\n  );\n};\n","export const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.items;\n","import { useSelector } from 'react-redux';\nimport { getFilter } from '../../redux/filter/selectors';\nimport { sortArrOfObj } from 'utils/sortArrOfObj';\nimport { Contact } from '../Contact/Contact';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport { Container, List, ListItem, Text } from '@chakra-ui/react';\n\nconst ContactList = () => {\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(selectAllContacts);\n\n  const filteringContactsList = () => {\n    if (!contacts) return [];\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n    return filteredContacts;\n  };\n\n  const filteredContactsData = filteringContactsList();\n  const sortedContactsData = sortArrOfObj(filteredContactsData);\n\n  if (sortedContactsData.length === 0) {\n    return (\n      <Container>\n        <Text>\n          Sorry, but you don't have any contacts yet. Add your first contact.\n        </Text>\n      </Container>\n    );\n  }\n\n  return (\n    <Container mb={20}>\n      <List spacing={4}>\n        {sortedContactsData.map(({ id, name, number }) => (\n          <ListItem key={id}>\n            <Contact name={name} number={number} id={id} />\n          </ListItem>\n        ))}\n      </List>\n    </Container>\n  );\n};\n\nexport default ContactList;\n","export const sortArrOfObj = array => {\n  return array.slice().sort((a, b) => {\n    const fa = a.name.toLowerCase();\n    const fb = b.name.toLowerCase();\n    return fa.localeCompare(fb);\n  });\n};\n","export const formatPhoneNumber = number => {\n  const cleaned = ('' + number).replace(/\\D/g, '');\n  const match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{2})(\\d{2})$/);\n\n  if (match) {\n    return '(' + match[1] + ')-' + match[2] + '-' + match[3] + '-' + match[4];\n  }\n\n  return null;\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport { formatPhoneNumber } from 'utils/formatPhoneNumber';\nimport toast from 'react-hot-toast';\nimport {\n  Input,\n  Stack,\n  InputGroup,\n  InputLeftElement,\n  Container,\n  Heading,\n  Icon,\n  Button,\n  FormLabel,\n  InputLeftAddon,\n  Divider,\n  AbsoluteCenter,\n  Box,\n} from '@chakra-ui/react';\nimport { BsFillPersonFill } from 'react-icons/bs';\n\nconst ContactForm = () => {\n  const contacts = useSelector(selectAllContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    const name = form.elements.name.value.trim();\n    const number = form.elements.number.value;\n\n    const isNameAlreadyExist = contacts.some(\n      contact => contact.name.toLowerCase().trim() === name.toLowerCase()\n    );\n\n    if (isNameAlreadyExist) {\n      toast.error(`${name} is already in contacts.`, {\n        position: 'top-center',\n      });\n      return;\n    }\n\n    const newContact = {\n      name,\n      number: formatPhoneNumber(number),\n    };\n\n    dispatch(addContact(newContact));\n    form.reset();\n  };\n\n  return (\n    <Container py={4} px={4}>\n      <Box position=\"relative\" padding=\"10\">\n        <Divider />\n        <AbsoluteCenter px=\"4\">\n          <Heading as=\"h2\" fontSize=\"xl\" align=\"center\">\n            Add new contact\n          </Heading>\n        </AbsoluteCenter>\n      </Box>\n\n      <form onSubmit={handleSubmit}>\n        <Stack spacing={2}>\n          <FormLabel for=\"name\" m=\"0\">\n            Name:\n          </FormLabel>\n          <InputGroup>\n            <InputLeftElement pointerEvents=\"none\">\n              <Icon as={BsFillPersonFill} color=\"gray.300\" />\n            </InputLeftElement>\n\n            <Input\n              as=\"input\"\n              name=\"name\"\n              placeholder=\"Name\"\n              minLength={3}\n              id=\"name\"\n            />\n          </InputGroup>\n          <FormLabel for=\"number\" m=\"0\">\n            Phone:\n          </FormLabel>\n          <InputGroup>\n            <InputLeftAddon>+38</InputLeftAddon>\n            <Input\n              as=\"input\"\n              name=\"number\"\n              placeholder=\"(096)-11-11-111\"\n              minLength={10}\n              maxLength={10}\n              id=\"number\"\n            />\n          </InputGroup>\n          <Button type=\"submit\" variant=\"brand\" mt={2}>\n            Add contact\n          </Button>\n        </Stack>\n      </form>\n    </Container>\n  );\n};\n\nexport default ContactForm;\n\n/* =========================== */\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport {\n  Input,\n  Container,\n  Heading,\n  Divider,\n  AbsoluteCenter,\n  Box,\n} from '@chakra-ui/react';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const onChangeFilterInput = evt => {\n    dispatch(setFilter(evt.target.value.toLowerCase().trim()));\n  };\n\n  return (\n    <Container py={4} px={4}>\n      <Box position=\"relative\" padding=\"10\">\n        <Divider />\n        <AbsoluteCenter px=\"4\">\n          <Heading as=\"h2\" fontSize=\"l\" align=\"center\">\n            Find contacts by name\n          </Heading>\n        </AbsoluteCenter>\n      </Box>\n\n      <Input\n        as=\"input\"\n        onInput={onChangeFilterInput}\n        name=\"filter\"\n        placeholder=\"Start typing a name...\"\n        minLength={3}\n        id=\"filter\"\n      />\n    </Container>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport ContactList from 'components/ContactList/ContactList';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport Filter from 'components/Filter/Filter';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["getFilter","state","filter","Contact","id","name","number","dispatch","useDispatch","align","p","src","ml","fontWeight","fontSize","type","onClick","deleteContact","variant","selectLoading","contacts","loading","selectAllContacts","items","useSelector","filteredContactsData","contact","toLowerCase","includes","sortedContactsData","slice","sort","a","b","fa","fb","localeCompare","length","mb","spacing","map","formatPhoneNumber","match","replace","py","px","position","padding","as","onSubmit","e","preventDefault","form","currentTarget","elements","value","trim","some","toast","newContact","addContact","reset","for","m","pointerEvents","BsFillPersonFill","color","I","placeholder","minLength","maxLength","mt","onInput","evt","setFilter","target","Tasks","isLoading","useEffect","fetchContacts","Helmet"],"sourceRoot":""}