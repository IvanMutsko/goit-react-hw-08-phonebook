{"version":3,"file":"static/js/0.8ef35206.chunk.js","mappings":"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","sources":["redux/filter/selectors.js","components/ContactModal/ContactModal.jsx","utils/formatPhoneNumber.js","components/UpdateContact/UpdateContact.jsx","components/Contact/Contact.jsx","redux/contacts/selectors.js","components/ContactList/ContactList.jsx","utils/sortArrOfObj.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","pages/PhoneBook.jsx"],"sourcesContent":["export const getFilter = state => state.filter;\n","import React from 'react';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  Container,\n  useDisclosure,\n  Box,\n} from '@chakra-ui/react';\n\nexport const ContactModal = ({ buttonName, modalTitle, modalBody }) => {\n  const Overlay = () => (\n    <ModalOverlay\n      bg=\"blackAlpha.300\"\n      backdropFilter=\"blur(10px) hue-rotate(90deg)\"\n    />\n  );\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [overlay, setOverlay] = React.useState(<Overlay />);\n\n  return (\n    <Container>\n      <Box py={4}>\n        <Button\n          onClick={() => {\n            setOverlay(<Overlay />);\n            onOpen();\n          }}\n          variant=\"brand\"\n        >\n          {buttonName}\n        </Button>\n      </Box>\n\n      <Modal isCentered isOpen={isOpen} onClose={onClose}>\n        {overlay}\n        <ModalContent px={4} py={8}>\n          <ModalCloseButton />\n          <ModalHeader as=\"h2\" fontSize=\"xl\" align=\"center\">\n            {modalTitle}\n          </ModalHeader>\n          <ModalBody>{modalBody}</ModalBody>\n        </ModalContent>\n      </Modal>\n    </Container>\n  );\n};\n","export const formatPhoneNumber = number => {\n  const cleaned = ('' + number).replace(/\\D/g, '');\n  const match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{2})(\\d{2})$/);\n\n  if (match) {\n    return '(' + match[1] + ')-' + match[2] + '-' + match[3] + '-' + match[4];\n  }\n\n  return null;\n};\n\nexport const delSeparators = number => {\n  const cleanedNumber = number.replace(/[()-]/g, '');\n\n  return cleanedNumber;\n};\n","import { useDispatch } from 'react-redux';\nimport { updateContact } from 'redux/contacts/operations';\nimport { delSeparators, formatPhoneNumber } from 'utils/formatPhoneNumber';\nimport {\n  Input,\n  Stack,\n  InputGroup,\n  InputLeftElement,\n  Icon,\n  Button,\n  FormLabel,\n  InputLeftAddon,\n} from '@chakra-ui/react';\nimport { BsFillPersonFill } from 'react-icons/bs';\n\nexport const UpdateContact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    const name = form.elements.name.value.trim();\n    const number = form.elements.number.value;\n\n    const updatedContact = {\n      id,\n      name,\n      number: formatPhoneNumber(number),\n    };\n\n    dispatch(updateContact(updatedContact));\n    form.reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <Stack spacing={2}>\n          <FormLabel htmlFor=\"name\" m=\"0\">\n            Name:\n          </FormLabel>\n          <InputGroup>\n            <InputLeftElement pointerEvents=\"none\">\n              <Icon as={BsFillPersonFill} color=\"gray.300\" />\n            </InputLeftElement>\n\n            <Input\n              as=\"input\"\n              name=\"name\"\n              defaultValue={name}\n              minLength={3}\n              id=\"name\"\n            />\n          </InputGroup>\n          <FormLabel htmlFor=\"number\" m=\"0\">\n            Phone:\n          </FormLabel>\n          <InputGroup>\n            <InputLeftAddon>+38</InputLeftAddon>\n            <Input\n              as=\"input\"\n              name=\"number\"\n              minLength={10}\n              maxLength={10}\n              id=\"number\"\n              defaultValue={delSeparators(number)}\n            />\n          </InputGroup>\n          <Button type=\"submit\" variant=\"brand\" mt={4}>\n            Update contact\n          </Button>\n        </Stack>\n      </form>\n    </>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Flex, Avatar, Box, Text, Button, Divider } from '@chakra-ui/react';\nimport { DeleteIcon } from '@chakra-ui/icons';\nimport { ContactModal } from 'components/ContactModal/ContactModal';\nimport { UpdateContact } from 'components/UpdateContact/UpdateContact';\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <>\n      <Flex align=\"center\" p={2}>\n        <Avatar src=\"https://bit.ly/broken-link\" />\n        <Box ml=\"3\">\n          <Text fontWeight=\"bold\">{name}</Text>\n          <Text fontSize=\"sm\">{number}</Text>\n        </Box>\n        <Box ml=\"auto\" display=\"flex\" alignItems=\"center\">\n          <ContactModal\n            buttonName={'Update'}\n            modalTitle={'Update you contact'}\n            modalBody={<UpdateContact id={id} name={name} number={number} />}\n          />\n          <Button type=\"button\" onClick={handleDelete} variant=\"brand\">\n            <DeleteIcon />\n          </Button>\n        </Box>\n      </Flex>\n      <Divider />\n    </>\n  );\n};\n","export const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.items;\n","import { useSelector } from 'react-redux';\nimport { getFilter } from '../../redux/filter/selectors';\nimport { sortArrOfObj } from 'utils/sortArrOfObj';\nimport { Contact } from '../Contact/Contact';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport { Container, List, ListItem, Text } from '@chakra-ui/react';\n\nconst ContactList = () => {\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(selectAllContacts);\n\n  const filteringContactsList = () => {\n    if (!contacts) return [];\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n    return filteredContacts;\n  };\n\n  const filteredContactsData = filteringContactsList();\n  const sortedContactsData = sortArrOfObj(filteredContactsData);\n\n  if (sortedContactsData.length === 0) {\n    return (\n      <Container>\n        <Text>\n          Sorry, but you don't have any contacts yet. Add your first contact.\n        </Text>\n      </Container>\n    );\n  }\n\n  return (\n    <Container mb={20}>\n      <List spacing={4}>\n        {sortedContactsData.map(({ id, name, number }) => (\n          <ListItem key={id}>\n            <Contact name={name} number={number} id={id} />\n          </ListItem>\n        ))}\n      </List>\n    </Container>\n  );\n};\n\nexport default ContactList;\n","export const sortArrOfObj = array => {\n  return array.slice().sort((a, b) => {\n    const fa = a.name.toLowerCase();\n    const fb = b.name.toLowerCase();\n    return fa.localeCompare(fb);\n  });\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport { formatPhoneNumber } from 'utils/formatPhoneNumber';\nimport toast from 'react-hot-toast';\nimport {\n  Input,\n  Stack,\n  InputGroup,\n  InputLeftElement,\n  Icon,\n  Button,\n  FormLabel,\n  InputLeftAddon,\n} from '@chakra-ui/react';\nimport { BsFillPersonFill } from 'react-icons/bs';\n\nconst ContactForm = () => {\n  const contacts = useSelector(selectAllContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    const name = form.elements.name.value.trim();\n    const number = form.elements.number.value;\n\n    const isNameAlreadyExist = contacts.some(\n      contact => contact.name.toLowerCase().trim() === name.toLowerCase()\n    );\n\n    if (isNameAlreadyExist) {\n      toast.error(`${name} is already in contacts.`, {\n        position: 'top-center',\n      });\n      return;\n    }\n\n    const newContact = {\n      name,\n      number: formatPhoneNumber(number),\n    };\n\n    dispatch(addContact(newContact));\n    form.reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <Stack spacing={2}>\n          <FormLabel htmlFor=\"name\" m=\"0\">\n            Name:\n          </FormLabel>\n          <InputGroup>\n            <InputLeftElement pointerEvents=\"none\">\n              <Icon as={BsFillPersonFill} color=\"gray.300\" />\n            </InputLeftElement>\n\n            <Input\n              as=\"input\"\n              name=\"name\"\n              placeholder=\"Name\"\n              minLength={3}\n              id=\"name\"\n            />\n          </InputGroup>\n          <FormLabel htmlFor=\"number\" m=\"0\">\n            Phone:\n          </FormLabel>\n          <InputGroup>\n            <InputLeftAddon>+38</InputLeftAddon>\n            <Input\n              as=\"input\"\n              name=\"number\"\n              placeholder=\"(096)-11-11-111\"\n              minLength={10}\n              maxLength={10}\n              id=\"number\"\n            />\n          </InputGroup>\n          <Button type=\"submit\" variant=\"brand\" mt={4}>\n            Add contact\n          </Button>\n        </Stack>\n      </form>\n    </>\n  );\n};\n\nexport default ContactForm;\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport {\n  Input,\n  Container,\n  Heading,\n  Divider,\n  AbsoluteCenter,\n  Box,\n} from '@chakra-ui/react';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const onChangeFilterInput = evt => {\n    dispatch(setFilter(evt.target.value.toLowerCase().trim()));\n  };\n\n  return (\n    <Container py={4} px={4}>\n      <Box position=\"relative\" padding=\"6\">\n        <Divider />\n        <AbsoluteCenter px=\"4\">\n          <Heading as=\"h2\" fontSize=\"xl\" align=\"center\">\n            Find contact by name\n          </Heading>\n        </AbsoluteCenter>\n      </Box>\n\n      <Input\n        as=\"input\"\n        onInput={onChangeFilterInput}\n        name=\"filter\"\n        placeholder=\"Start typing a name...\"\n        minLength={3}\n        id=\"filter\"\n      />\n    </Container>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport ContactList from 'components/ContactList/ContactList';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport Filter from 'components/Filter/Filter';\nimport { ContactModal } from 'components/ContactModal/ContactModal';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Filter />\n      <ContactModal\n        buttonName={'Add new contact'}\n        modalTitle={'Add new contact'}\n        modalBody={<ContactForm />}\n      />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["getFilter","state","filter","ContactModal","buttonName","modalTitle","modalBody","Overlay","bg","backdropFilter","useDisclosure","isOpen","onOpen","onClose","React","overlay","setOverlay","py","onClick","variant","isCentered","px","as","fontSize","align","formatPhoneNumber","number","match","replace","delSeparators","UpdateContact","id","name","dispatch","useDispatch","onSubmit","e","preventDefault","form","currentTarget","elements","value","trim","updatedContact","updateContact","reset","spacing","htmlFor","m","pointerEvents","BsFillPersonFill","color","I","defaultValue","minLength","maxLength","type","mt","Contact","p","src","ml","fontWeight","display","alignItems","deleteContact","selectLoading","contacts","loading","selectAllContacts","items","useSelector","filteredContactsData","contact","toLowerCase","includes","sortedContactsData","slice","sort","a","b","fa","fb","localeCompare","length","mb","map","some","toast","position","newContact","addContact","placeholder","padding","onInput","evt","setFilter","target","Tasks","isLoading","useEffect","fetchContacts","Helmet"],"sourceRoot":""}